import{_ as n,o as a,c as o,b as s,d as l,t as p,e as t}from"./app.2030392b.js";const g=JSON.parse(`{"title":"5. Setup a Resource","description":"","frontmatter":{"title":"5. Setup a Resource","order":5},"headers":[{"level":2,"title":"1. Setting up Folder Structure","slug":"_1-setting-up-folder-structure","link":"#_1-setting-up-folder-structure","children":[]},{"level":2,"title":"2. Adding Imports to Server","slug":"_2-adding-imports-to-server","link":"#_2-adding-imports-to-server","children":[]},{"level":2,"title":"3. Adding Imports to Client","slug":"_3-adding-imports-to-client","link":"#_3-adding-imports-to-client","children":[]},{"level":2,"title":"4. Creating a resource.cfg","slug":"_4-creating-a-resource-cfg","link":"#_4-creating-a-resource-cfg","children":[]},{"level":2,"title":"5. Add the 'core' resource to server.cfg","slug":"_5-add-the-core-resource-to-server-cfg","link":"#_5-add-the-core-resource-to-server-cfg","children":[]},{"level":2,"title":"6. Start the Server!","slug":"_6-start-the-server","link":"#_6-start-the-server","children":[]},{"level":2,"title":"7. Connect to the Server","slug":"_7-connect-to-the-server","link":"#_7-connect-to-the-server","children":[]},{"level":2,"title":"8. Success!","slug":"_8-success","link":"#_8-success","children":[]}],"relativePath":"intro/005-setup-resource.md"}`),r={name:"intro/005-setup-resource.md"},c={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=t(`<p>Now moving back to the VSCode window where our server is located, it&#39;s time to setup our first resource so that we can join the server.</p><h2 id="_1-setting-up-folder-structure" tabindex="-1">1. Setting up Folder Structure <a class="header-anchor" href="#_1-setting-up-folder-structure" aria-hidden="true">#</a></h2><p>There is a standard that many of the alt:V developers currently follow and this section is going to teach you what folders you need to make.</p><p>Create a folder called <code>resources</code> in the main file tree window.</p><p><img src="https://i.imgur.com/TPmMIIG.png" alt=""></p><p>Create a folder inside of <code>resources</code> called <code>core</code>, this will be the name of our &#39;resource&#39;.</p><p>Inside of <code>resources/core</code> create three folders.</p><ul><li>server</li><li>client</li><li>shared</li></ul><p><img src="https://i.imgur.com/9OMnnAU.png" alt=""></p><p>Inside of <code>server</code>, <code>client</code>, and <code>shared</code> create another file called <code>index.js</code>.</p><p><img src="https://i.imgur.com/tMLzYOK.png" alt=""></p><h2 id="_2-adding-imports-to-server" tabindex="-1">2. Adding Imports to Server <a class="header-anchor" href="#_2-adding-imports-to-server" aria-hidden="true">#</a></h2><p>Open the following file: <code>resources/core/server/index.js</code></p><p>Append the following to the top.</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> alt </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">alt-server</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">alt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Core Resource Started!</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> spawnPoint </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> alt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">867.1437377929688</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">172.6201934814453</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">z</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">37.799232482910156</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Spawns the player and gives them a model.</span></span>
<span class="line"><span style="color:#676E95;"> * </span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">alt.Player</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">player</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handleSpawn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">spawn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">spawnPoint</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">model</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mp_m_freemode_01</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// This event is called when a player connects to the server.</span></span>
<span class="line"><span style="color:#A6ACCD;">alt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">playerConnect</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handleSpawn)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="_3-adding-imports-to-client" tabindex="-1">3. Adding Imports to Client <a class="header-anchor" href="#_3-adding-imports-to-client" aria-hidden="true">#</a></h2><p>Open the following file: <code>resources/core/client/index.js</code></p><p>Append the following to the top.</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> alt </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">alt-client</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> native </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">natives</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">alt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Hello from the &#39;F8&#39; console menu on client-side.</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="_4-creating-a-resource-cfg" tabindex="-1">4. Creating a resource.cfg <a class="header-anchor" href="#_4-creating-a-resource-cfg" aria-hidden="true">#</a></h2><p>Every resource needs to have a <code>resource.cfg</code> to tell alt:V what files to load first.</p><p>Create a file called <code>resource.cfg</code> under <code>resources/core</code>.</p><p>Paste the following code inside of the <code>resource.cfg</code> file.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">type: js,</span></span>
<span class="line"><span style="color:#A6ACCD;">main: server/index.js,</span></span>
<span class="line"><span style="color:#A6ACCD;">client-main: client/index.js,</span></span>
<span class="line"><span style="color:#A6ACCD;">client-files: </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    client/</span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#A6ACCD;">    shared/</span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">deps: </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"></span></code></pre></div><p>This is telling the server to load <code>server/index.js</code> on server-side first and also loading <code>client/index.js</code> on client-side.</p><h2 id="_5-add-the-core-resource-to-server-cfg" tabindex="-1">5. Add the &#39;core&#39; resource to server.cfg <a class="header-anchor" href="#_5-add-the-core-resource-to-server-cfg" aria-hidden="true">#</a></h2><p>Our last and final step is to update the <code>server.cfg</code> in the root of your project and add &#39;core&#39; as a resource.</p><p>Open <code>server.cfg</code> and append <code>core</code> to the <code>resources</code> array.</p><p><img src="https://i.imgur.com/JG5IDGU.png" alt=""></p><h2 id="_6-start-the-server" tabindex="-1">6. Start the Server! <a class="header-anchor" href="#_6-start-the-server" aria-hidden="true">#</a></h2><p>Now it&#39;s time to see we were successful in setting up our first alt:V Server.</p><p>Run the following command in your <code>VSCode Terminal</code>.</p><p><strong>PowerShell</strong></p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">./altv-server</span></span>
<span class="line"></span></code></pre></div><p><strong>CMD / Command Prompt</strong></p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">altv-server</span></span>
<span class="line"></span></code></pre></div><p>If successful you should see this in your server console.</p><p><img src="https://i.imgur.com/9JupD0G.png" alt=""></p><h2 id="_7-connect-to-the-server" tabindex="-1">7. Connect to the Server <a class="header-anchor" href="#_7-connect-to-the-server" aria-hidden="true">#</a></h2><p>Now you can connect to your server through alt:V Direct Connect in the client.</p><p>The following IP(s) should work try one or the other.</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">0.0.0.0:7788</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>or</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">127.0.0.1:7788</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="_8-success" tabindex="-1">8. Success! <a class="header-anchor" href="#_8-success" aria-hidden="true">#</a></h2><p><img src="https://i.imgur.com/7Rp1v0q.jpeg" alt=""></p>`,46);function D(e,y,F,h,C,u){return a(),o("div",null,[s("h1",c,[l(p(e.$frontmatter.title)+" ",1),i]),d])}const f=n(r,[["render",D]]);export{g as __pageData,f as default};
